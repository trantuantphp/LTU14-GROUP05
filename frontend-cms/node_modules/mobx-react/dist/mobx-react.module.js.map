{"version":3,"file":"mobx-react.module.js","sources":["../src/utils/utils.js","../src/observer.js","../src/Provider.js","../src/inject.js","../src/disposeOnUnmount.js","../src/propTypes.js","../src/index.js"],"sourcesContent":["export function isStateless(component) {\n    // `function() {}` has prototype, but `() => {}` doesn't\n    // `() => {}` via Babel has prototype too.\n    return !(component.prototype && component.prototype.render)\n}\n\nlet symbolId = 0\nfunction createSymbol(name) {\n    if (typeof Symbol === \"function\") {\n        return Symbol(name)\n    }\n    const symbol = `__$mobx-react ${name} (${symbolId})`\n    symbolId++\n    return symbol\n}\n\nconst createdSymbols = {}\nexport function newSymbol(name) {\n    if (!createdSymbols[name]) {\n        createdSymbols[name] = createSymbol(name)\n    }\n    return createdSymbols[name]\n}\n\nexport function shallowEqual(objA, objB) {\n    //From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (is(objA, objB)) return true\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false\n    }\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n    if (keysA.length !== keysB.length) return false\n    for (let i = 0; i < keysA.length; i++) {\n        if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n    return true\n}\n\nfunction is(x, y) {\n    // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n    if (x === y) {\n        return x !== 0 || 1 / x === 1 / y\n    } else {\n        return x !== x && y !== y\n    }\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList = {\n    $$typeof: 1,\n    render: 1,\n    compare: 1,\n    type: 1,\n    childContextTypes: 1,\n    contextType: 1,\n    contextTypes: 1,\n    defaultProps: 1,\n    getDefaultProps: 1,\n    getDerivedStateFromError: 1,\n    getDerivedStateFromProps: 1,\n    mixins: 1,\n    propTypes: 1\n}\n\nexport function copyStaticProperties(base, target) {\n    const protoProps = Object.getOwnPropertyNames(Object.getPrototypeOf(base));\n    Object.getOwnPropertyNames(base).forEach(key => {\n      if (!hoistBlackList[key] && !protoProps.includes(key)) {\n        Object.defineProperty(\n          target,\n          key,\n          Object.getOwnPropertyDescriptor(base, key)\n        );\n      }\n    });\n}\n","import React, { Component, PureComponent, forwardRef } from \"react\"\nimport { createAtom, _allowStateChanges } from \"mobx\"\nimport {\n    observer as observerLite,\n    useStaticRendering as useStaticRenderingLite,\n    Observer\n} from \"mobx-react-lite\"\n\nimport { newSymbol, shallowEqual } from \"./utils/utils\"\n\nlet isUsingStaticRendering = false\n\nconst skipRenderKey = newSymbol(\"skipRender\")\nconst isForcingUpdateKey = newSymbol(\"isForcingUpdate\")\n\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol =\n    typeof forwardRef === \"function\" && forwardRef((_props, _ref) => {})[\"$$typeof\"]\n\n/**\n * Helper to set `prop` to `this` as non-enumerable (hidden prop)\n * @param target\n * @param prop\n * @param value\n */\nfunction setHiddenProp(target, prop, value) {\n    if (!Object.hasOwnProperty.call(target, prop)) {\n        Object.defineProperty(target, prop, {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value\n        })\n    } else {\n        target[prop] = value\n    }\n}\n\nexport function useStaticRendering(useStaticRendering) {\n    isUsingStaticRendering = useStaticRendering\n    useStaticRenderingLite(useStaticRendering)\n}\n\nfunction observerSCU(nextProps, nextState) {\n    if (isUsingStaticRendering) {\n        console.warn(\n            \"[mobx-react] It seems that a re-rendering of a React component is triggered while in static (server-side) mode. Please make sure components are rendered only once server-side.\"\n        )\n    }\n    // update on any state changes (as is the default)\n    if (this.state !== nextState) {\n        return true\n    }\n    // update if props are shallowly not equal, inspired by PureRenderMixin\n    // we could return just 'false' here, and avoid the `skipRender` checks etc\n    // however, it is nicer if lifecycle events are triggered like usually,\n    // so we return true here if props are shallowly modified.\n    return !shallowEqual(this.props, nextProps)\n}\n\nfunction makeObservableProp(target, propName) {\n    const valueHolderKey = newSymbol(`reactProp_${propName}_valueHolder`)\n    const atomHolderKey = newSymbol(`reactProp_${propName}_atomHolder`)\n    function getAtom() {\n        if (!this[atomHolderKey]) {\n            setHiddenProp(this, atomHolderKey, createAtom(\"reactive \" + propName))\n        }\n        return this[atomHolderKey]\n    }\n    Object.defineProperty(target, propName, {\n        configurable: true,\n        enumerable: true,\n        get: function() {\n            getAtom.call(this).reportObserved()\n            return this[valueHolderKey]\n        },\n        set: function set(v) {\n            if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {\n                setHiddenProp(this, valueHolderKey, v)\n                setHiddenProp(this, skipRenderKey, true)\n                getAtom.call(this).reportChanged()\n                setHiddenProp(this, skipRenderKey, false)\n            } else {\n                setHiddenProp(this, valueHolderKey, v)\n            }\n        }\n    })\n}\n\n/**\n * Observer function / decorator\n */\nexport function observer(componentClass) {\n    if (componentClass.isMobxInjector === true) {\n        console.warn(\n            \"Mobx observer: You are trying to use 'observer' on a component that already has 'inject'. Please apply 'observer' before applying 'inject'\"\n        )\n    }\n\n    // Unwrap forward refs into `<Observer>` component\n    // we need to unwrap the render, because it is the inner render that needs to be tracked,\n    // not the ForwardRef HoC\n    if (ReactForwardRefSymbol && componentClass[\"$$typeof\"] === ReactForwardRefSymbol) {\n        const baseRender = componentClass.render\n        if (typeof baseRender !== \"function\")\n            throw new Error(\"render property of ForwardRef was not a function\")\n        return forwardRef(function ObserverForwardRef() {\n            return <Observer>{() => baseRender.apply(undefined, arguments)}</Observer>\n        })\n    }\n\n    // Function component\n    if (\n        typeof componentClass === \"function\" &&\n        (!componentClass.prototype || !componentClass.prototype.render) &&\n        !componentClass.isReactClass &&\n        !Component.isPrototypeOf(componentClass)\n    ) {\n        return observerLite(componentClass)\n    }\n\n    return makeClassComponentObserver(componentClass)\n}\n\nfunction makeClassComponentObserver(componentClass) {\n    const target = componentClass.prototype || componentClass\n    if (target.componentWillReact)\n        throw new Error(\"The componentWillReact life-cycle event is no longer supported\")\n    if (componentClass.__proto__ !== PureComponent) {\n        if (!target.shouldComponentUpdate) target.shouldComponentUpdate = observerSCU\n        else if (target.shouldComponentUpdate !== observerSCU)\n            throw new Error(\n                \"It is not allowed to use shouldComponentUpdate in observer based components.\"\n            )\n    }\n    makeObservableProp(target, \"props\")\n    makeObservableProp(target, \"state\")\n    const baseRender = target.render\n\n    target.render = function renderWrapper() {\n        if (!this.baseRender) {\n            // safe the closure, as it won't change!\n            const bound = baseRender.bind(this)\n            this.baseRender = () => bound()\n        }\n        return <Observer>{this.baseRender}</Observer>\n    }\n    return componentClass\n}\n","import { Children, Component, createContext, createElement } from \"react\"\nimport { shallowEqual } from \"./utils/utils\"\n\nconst specialReactKeys = { children: true, key: true, ref: true }\n\nexport const MobXProviderContext = createContext({})\n\nexport class Provider extends Component {\n    static contextType = MobXProviderContext\n\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n            ...context,\n            ...grabStores(props)\n        }\n    }\n\n    render() {\n        return createElement(\n            MobXProviderContext.Provider,\n            { value: this.state },\n            Children.only(this.props.children)\n        )\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (process.env.NODE_ENV !== \"production\") {\n            const newStores = { ...prevState, ...grabStores(nextProps) } // spread in prevState for the context based stores\n            if (!shallowEqual(prevState, newStores))\n                throw new Error(\n                    \"MobX Provider: The set of provided stores has changed. Please avoid changing stores as the change might not propagate to all children\"\n                )\n        }\n        return prevState // because they didn't change, remember!\n    }\n}\n\nfunction grabStores(from) {\n    const res = {}\n    if (!from) return res\n    for (let key in from) if (validStoreName(key)) res[key] = from[key]\n    return res\n}\n\nfunction validStoreName(key) {\n    return !specialReactKeys[key] && key !== \"suppressChangedStoreWarning\"\n}\n","import React, { Component, createElement } from \"react\"\nimport { observer } from \"./observer\"\nimport { isStateless, copyStaticProperties } from \"./utils/utils\"\nimport { MobXProviderContext } from \"./Provider\"\n\n/**\n * Store Injection\n */\nfunction createStoreInjector(grabStoresFn, component, injectNames, makeReactive) {\n    let displayName = getInjectName(component, injectNames)\n\n    class Injector extends Component {\n        static contextType = MobXProviderContext\n\n        render() {\n            const { forwardRef, ...props } = this.props\n\n            Object.assign(props, grabStoresFn(this.context || {}, props) || {})\n\n            if (forwardRef && !isStateless(component)) {\n                props.ref = this.props.forwardRef\n            }\n\n            return createElement(component, props)\n        }\n    }\n    if (makeReactive) Injector = observer(Injector)\n    Injector.isMobxInjector = true // assigned late to suppress observer warning\n\n    // Support forward refs\n    const InjectHocRef = React.forwardRef((props, ref) =>\n        React.createElement(Injector, { ...props, forwardRef: ref })\n    )\n    // Static fields from component should be visible on the generated Injector\n    copyStaticProperties(component, InjectHocRef)\n    InjectHocRef.wrappedComponent = component\n    InjectHocRef.displayName = displayName\n    return InjectHocRef\n}\n\nfunction getInjectName(component, injectNames) {\n    let displayName\n    const componentName =\n        component.displayName ||\n        component.name ||\n        (component.constructor && component.constructor.name) ||\n        \"Component\"\n    if (injectNames) displayName = \"inject-with-\" + injectNames + \"(\" + componentName + \")\"\n    else displayName = \"inject(\" + componentName + \")\"\n    return displayName\n}\n\nfunction grabStoresByName(storeNames) {\n    return function(baseStores, nextProps) {\n        storeNames.forEach(function(storeName) {\n            if (\n                storeName in nextProps // prefer props over stores\n            )\n                return\n            if (!(storeName in baseStores))\n                throw new Error(\n                    \"MobX injector: Store '\" +\n                        storeName +\n                        \"' is not available! Make sure it is provided by some Provider\"\n                )\n            nextProps[storeName] = baseStores[storeName]\n        })\n        return nextProps\n    }\n}\n\n/**\n * higher order component that injects stores to a child.\n * takes either a varargs list of strings, which are stores read from the context,\n * or a function that manually maps the available stores from the context to props:\n * storesToProps(mobxStores, props, context) => newProps\n */\nexport function inject(/* fn(stores, nextProps) or ...storeNames */ ...storeNames) {\n    let grabStoresFn\n    if (typeof arguments[0] === \"function\") {\n        grabStoresFn = arguments[0]\n        return componentClass =>\n            createStoreInjector(grabStoresFn, componentClass, grabStoresFn.name, true)\n    } else {\n        return componentClass =>\n            createStoreInjector(\n                grabStoresByName(storeNames),\n                componentClass,\n                storeNames.join(\"-\"),\n                false\n            )\n    }\n}\n","import * as React from \"react\"\nimport { newSymbol } from \"./utils/utils\"\n\nconst storeKey = newSymbol(\"disposeOnUnmount\")\nconst baseUnmountKey = newSymbol(\"originalOnUnmount\")\n\nfunction checkFunc(prop) {\n    if (typeof prop !== \"function\") {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only works on functions such as disposers returned by reactions, autorun, etc.\"\n        )\n    }\n}\n\nfunction check(prop) {\n    if (Array.isArray(prop)) {\n        prop.map(checkFunc)\n    } else {\n        checkFunc(prop)\n    }\n}\n\nfunction runDisposersOnWillUnmount() {\n    if (this[baseUnmountKey]) this[baseUnmountKey]()\n    if (!this[storeKey]) {\n        // when disposeOnUnmount is only set to some instances of a component it will still patch the prototype\n        return\n    }\n    this[storeKey].forEach(propKeyOrFunction => {\n        const prop =\n            typeof propKeyOrFunction === \"string\" ? this[propKeyOrFunction] : propKeyOrFunction\n        if (prop !== undefined && prop !== null) {\n            check(prop)\n            if (Array.isArray(prop)) prop.map(f => f())\n            else prop()\n        }\n    })\n    this[storeKey] = []\n}\n\nexport function disposeOnUnmount(target, propertyKeyOrFunctionOrArray) {\n    if (Array.isArray(propertyKeyOrFunctionOrArray)) {\n        return propertyKeyOrFunctionOrArray.map(fn => disposeOnUnmount(target, fn))\n    }\n\n    const c = Object.getPrototypeOf(target).constructor || Object.getPrototypeOf(target.constructor)\n    const c2 = Object.getPrototypeOf(target.constructor)\n    if (\n        !(\n            c === React.Component ||\n            c === React.PureComponent ||\n            c2 === React.Component ||\n            c2 === React.PureComponent\n        )\n    ) {\n        throw new Error(\n            \"[mobx-react] disposeOnUnmount only supports direct subclasses of React.Component or React.PureComponent.\"\n        )\n    }\n\n    if (typeof propertyKeyOrFunctionOrArray !== \"string\") {\n        check(propertyKeyOrFunctionOrArray)\n    }\n\n    // add property key / function we want run (disposed) to the store\n    const componentWasAlreadyModified = !!target[storeKey]\n    const store = target[storeKey] || (target[storeKey] = [])\n\n    store.push(propertyKeyOrFunctionOrArray)\n\n    // tweak the component class componentWillUnmount if not done already\n    if (!componentWasAlreadyModified) {\n        // make sure original definition is invoked\n        if (target.componentWillUnmount) target[baseUnmountKey] = target.componentWillUnmount\n\n        Object.defineProperty(target, \"componentWillUnmount\", {\n            get() {\n                return runDisposersOnWillUnmount\n            },\n            set(fn) {\n                // this will happen if componentWillUnmount is being assigned after patching the prototype\n                this[storeKey].push(fn)\n                // assigning a new local value to componentWillUnmount would hide the super implementation...\n                this[baseUnmountKey] = undefined\n            },\n            configurable: false,\n            enumerable: false\n        })\n    }\n\n    // return the disposer as is if invoked as a non decorator\n    if (typeof propertyKeyOrFunctionOrArray !== \"string\") {\n        return propertyKeyOrFunctionOrArray\n    }\n}\n","import { isObservableArray, isObservableObject, isObservableMap, untracked } from \"mobx\"\n\n// Copied from React.PropTypes\nfunction createChainableTypeChecker(validate) {\n    function checkType(\n        isRequired,\n        props,\n        propName,\n        componentName,\n        location,\n        propFullName,\n        ...rest\n    ) {\n        return untracked(() => {\n            componentName = componentName || \"<<anonymous>>\"\n            propFullName = propFullName || propName\n            if (props[propName] == null) {\n                if (isRequired) {\n                    const actual = props[propName] === null ? \"null\" : \"undefined\"\n                    return new Error(\n                        \"The \" +\n                            location +\n                            \" `\" +\n                            propFullName +\n                            \"` is marked as required \" +\n                            \"in `\" +\n                            componentName +\n                            \"`, but its value is `\" +\n                            actual +\n                            \"`.\"\n                    )\n                }\n                return null\n            } else {\n                return validate(props, propName, componentName, location, propFullName, ...rest)\n            }\n        })\n    }\n\n    const chainedCheckType = checkType.bind(null, false)\n    chainedCheckType.isRequired = checkType.bind(null, true)\n    return chainedCheckType\n}\n\n// Copied from React.PropTypes\nfunction isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === \"symbol\") {\n        return true\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n        return true\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n        return true\n    }\n\n    return false\n}\n\n// Copied from React.PropTypes\nfunction getPropType(propValue) {\n    const propType = typeof propValue\n    if (Array.isArray(propValue)) {\n        return \"array\"\n    }\n    if (propValue instanceof RegExp) {\n        // Old webkits (at least until Android 4.0) return 'function' rather than\n        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n        // passes PropTypes.object.\n        return \"object\"\n    }\n    if (isSymbol(propType, propValue)) {\n        return \"symbol\"\n    }\n    return propType\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// Copied from React.PropTypes\nfunction getPreciseType(propValue) {\n    const propType = getPropType(propValue)\n    if (propType === \"object\") {\n        if (propValue instanceof Date) {\n            return \"date\"\n        } else if (propValue instanceof RegExp) {\n            return \"regexp\"\n        }\n    }\n    return propType\n}\n\nfunction createObservableTypeCheckerCreator(allowNativeType, mobxType) {\n    return createChainableTypeChecker(function(\n        props,\n        propName,\n        componentName,\n        location,\n        propFullName\n    ) {\n        return untracked(() => {\n            if (allowNativeType) {\n                if (getPropType(props[propName]) === mobxType.toLowerCase()) return null\n            }\n            let mobxChecker\n            switch (mobxType) {\n                case \"Array\":\n                    mobxChecker = isObservableArray\n                    break\n                case \"Object\":\n                    mobxChecker = isObservableObject\n                    break\n                case \"Map\":\n                    mobxChecker = isObservableMap\n                    break\n                default:\n                    throw new Error(`Unexpected mobxType: ${mobxType}`)\n            }\n            const propValue = props[propName]\n            if (!mobxChecker(propValue)) {\n                const preciseType = getPreciseType(propValue)\n                const nativeTypeExpectationMessage = allowNativeType\n                    ? \" or javascript `\" + mobxType.toLowerCase() + \"`\"\n                    : \"\"\n                return new Error(\n                    \"Invalid prop `\" +\n                        propFullName +\n                        \"` of type `\" +\n                        preciseType +\n                        \"` supplied to\" +\n                        \" `\" +\n                        componentName +\n                        \"`, expected `mobx.Observable\" +\n                        mobxType +\n                        \"`\" +\n                        nativeTypeExpectationMessage +\n                        \".\"\n                )\n            }\n            return null\n        })\n    })\n}\n\nfunction createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {\n    return createChainableTypeChecker(function(\n        props,\n        propName,\n        componentName,\n        location,\n        propFullName,\n        ...rest\n    ) {\n        return untracked(() => {\n            if (typeof typeChecker !== \"function\") {\n                return new Error(\n                    \"Property `\" +\n                        propFullName +\n                        \"` of component `\" +\n                        componentName +\n                        \"` has \" +\n                        \"invalid PropType notation.\"\n                )\n            }\n            let error = createObservableTypeCheckerCreator(allowNativeType, \"Array\")(\n                props,\n                propName,\n                componentName\n            )\n            if (error instanceof Error) return error\n            const propValue = props[propName]\n            for (let i = 0; i < propValue.length; i++) {\n                error = typeChecker(\n                    propValue,\n                    i,\n                    componentName,\n                    location,\n                    propFullName + \"[\" + i + \"]\",\n                    ...rest\n                )\n                if (error instanceof Error) return error\n            }\n            return null\n        })\n    })\n}\n\nconst observableArray = createObservableTypeCheckerCreator(false, \"Array\")\nconst observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false)\nconst observableMap = createObservableTypeCheckerCreator(false, \"Map\")\nconst observableObject = createObservableTypeCheckerCreator(false, \"Object\")\nconst arrayOrObservableArray = createObservableTypeCheckerCreator(true, \"Array\")\nconst arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true)\nconst objectOrObservableObject = createObservableTypeCheckerCreator(true, \"Object\")\n\nexport const PropTypes = {\n    observableArray,\n    observableArrayOf,\n    observableMap,\n    observableObject,\n    arrayOrObservableArray,\n    arrayOrObservableArrayOf,\n    objectOrObservableObject\n}\n","import { observable, configure } from \"mobx\"\nimport { Component } from \"react\"\nimport { unstable_batchedUpdates as rdBatched } from \"react-dom\"\n\nif (!Component) throw new Error(\"mobx-react requires React to be available\")\nif (!observable) throw new Error(\"mobx-react requires mobx to be available\")\n\nif (typeof rdBatched === \"function\") configure({ reactionScheduler: rdBatched })\n\nexport { Observer, useAsObservableSource, useLocalStore } from \"mobx-react-lite\"\n\nexport { observer, useStaticRendering } from \"./observer\"\n\nexport { Provider, MobXProviderContext } from \"./Provider\"\nexport { inject } from \"./inject\"\nexport { disposeOnUnmount } from \"./disposeOnUnmount\"\nexport { PropTypes } from \"./propTypes\"\n"],"names":["let","symbolId","createdSymbols","newSymbol","name","Symbol","symbol","createSymbol","shallowEqual","objA","objB","is","keysA","Object","keys","keysB","length","i","hasOwnProperty","call","x","y","const","hoistBlackList","$$typeof","render","compare","type","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","isUsingStaticRendering","skipRenderKey","isForcingUpdateKey","ReactForwardRefSymbol","forwardRef","_props","_ref","setHiddenProp","target","prop","value","defineProperty","enumerable","configurable","writable","useStaticRendering","useStaticRenderingLite","observerSCU","nextProps","nextState","console","warn","this","state","props","makeObservableProp","propName","valueHolderKey","atomHolderKey","getAtom","createAtom","get","reportObserved","set","v","reportChanged","observer","componentClass","isMobxInjector","baseRender","Error","React","Observer","apply","undefined","arguments","prototype","isReactClass","Component","isPrototypeOf","componentWillReact","__proto__","PureComponent","shouldComponentUpdate","bound","bind","makeClassComponentObserver","observerLite","specialReactKeys","children","key","ref","MobXProviderContext","createContext","Provider","constructor","context","grabStores","createElement","Children","only","prevState","process","env","NODE_ENV","from","res","validStoreName","createStoreInjector","grabStoresFn","component","injectNames","makeReactive","displayName","componentName","getInjectName","Injector","assign","isStateless","base","protoProps","InjectHocRef","getOwnPropertyNames","getPrototypeOf","forEach","includes","getOwnPropertyDescriptor","wrappedComponent","inject","storeNames","baseStores","storeName","grabStoresByName","join","storeKey","baseUnmountKey","checkFunc","check","Array","isArray","map","runDisposersOnWillUnmount","propKeyOrFunction","f","disposeOnUnmount","propertyKeyOrFunctionOrArray","fn","c","c2","componentWasAlreadyModified","push","componentWillUnmount","createChainableTypeChecker","validate","checkType","isRequired","location","propFullName","untracked","rest","chainedCheckType","getPropType","propValue","propType","RegExp","isSymbol","createObservableTypeCheckerCreator","allowNativeType","mobxType","toLowerCase","mobxChecker","isObservableArray","isObservableObject","isObservableMap","preciseType","Date","getPreciseType","nativeTypeExpectationMessage","createObservableArrayOfTypeChecker","typeChecker","error","PropTypes","observable","rdBatched","configure","reactionScheduler"],"mappings":"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"}