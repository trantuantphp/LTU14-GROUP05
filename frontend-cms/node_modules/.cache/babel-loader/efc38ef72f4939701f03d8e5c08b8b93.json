{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hung0\\\\Documents\\\\LTU14-GROUP05\\\\frontend-cms\\\\src\\\\screens\\\\User\\\\AddUser.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\n\nclass AddUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value; // eslint-disable-next-line react/no-access-state-in-setstate\n\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.handleWebsiteChange = value => {\n      let autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => \"\".concat(value).concat(domain));\n      }\n\n      this.setState({\n        autoCompleteResult\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const autoCompleteResult = this.state.autoCompleteResult;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86'\n    })(React.createElement(Select, {\n      style: {\n        width: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"84\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"+84\"), React.createElement(Option, {\n      value: \"85\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"+85\"), React.createElement(Option, {\n      value: \"86\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"+86\"), React.createElement(Option, {\n      value: \"87\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"+87\")));\n    const websiteOptions = autoCompleteResult.map(website => React.createElement(AutoCompleteOption, {\n      key: website,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, website));\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Vui lòng điền  input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Confirm Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, getFieldDecorator('confirm', {\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Nickname\\xA0\", React.createElement(Tooltip, {\n        title: \"What do you want others to call you?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, getFieldDecorator('nickname', {\n      rules: [{\n        required: true,\n        message: 'Please input your nickname!',\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, getFieldDecorator('phone', {\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }]\n    })(React.createElement(Input, {\n      addonBefore: prefixSelector,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Form.create()(AddUser);","map":{"version":3,"sources":["C:\\Users\\hung0\\Documents\\LTU14-GROUP05\\frontend-cms\\src\\screens\\User\\AddUser.js"],"names":["React","Component","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","AutoCompleteOption","AddUser","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","website","rules","type","message","required","validator","whitespace","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Icon,\r\n    Cascader,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Button,\r\n    AutoComplete\r\n} from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\nclass AddUser extends Component {\r\n    state = {\r\n        confirmDirty: false,\r\n        autoCompleteResult: []\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        // eslint-disable-next-line react/no-access-state-in-setstate\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    };\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n    handleWebsiteChange = value => {\r\n        let autoCompleteResult;\r\n        if (!value) {\r\n            autoCompleteResult = [];\r\n        } else {\r\n            autoCompleteResult = ['.com', '.org', '.net'].map(\r\n                domain => `${value}${domain}`\r\n            );\r\n        }\r\n        this.setState({ autoCompleteResult });\r\n    };\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { autoCompleteResult } = this.state;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 }\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 }\r\n            }\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8\r\n                }\r\n            }\r\n        };\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: '86'\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n                <Option value='84'>+84</Option>\r\n                <Option value='85'>+85</Option>\r\n                <Option value='86'>+86</Option>\r\n                <Option value='87'>+87</Option>\r\n            </Select>\r\n        );\r\n        const websiteOptions = autoCompleteResult.map(website => (\r\n            <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n        ));\r\n        return (\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                <Form.Item label='E-mail'>\r\n                    {getFieldDecorator('email', {\r\n                        rules: [\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!'\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Vui lòng điền  input your E-mail!'\r\n                            }\r\n                        ]\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label='Password' hasFeedback>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!'\r\n                            },\r\n                            {\r\n                                validator: this.validateToNextPassword\r\n                            }\r\n                        ]\r\n                    })(<Input.Password />)}\r\n                </Form.Item>\r\n                <Form.Item label='Confirm Password' hasFeedback>\r\n                    {getFieldDecorator('confirm', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!'\r\n                            },\r\n                            {\r\n                                validator: this.compareToFirstPassword\r\n                            }\r\n                        ]\r\n                    })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={(\r\n                        <span>\r\n                            Nickname&nbsp;\r\n                            <Tooltip title='What do you want others to call you?'>\r\n                                <Icon type='question-circle-o' />\r\n                            </Tooltip>\r\n                        </span>\r\n                    )}\r\n                >\r\n                    {getFieldDecorator('nickname', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your nickname!',\r\n                                whitespace: true\r\n                            }\r\n                        ]\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label='Phone Number'>\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your phone number!'\r\n                            }\r\n                        ]\r\n                    })(\r\n                        <Input\r\n                            addonBefore={prefixSelector}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    )}\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddUser);\r\n"]},"metadata":{},"sourceType":"module"}